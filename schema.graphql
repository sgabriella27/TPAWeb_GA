# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Activities {
  activity: String!
  id: ID!
  userID: ID!
}

type Card {
  badge: PointItem
  badgeID: Int
  cardImg: String!
  id: ID!
  ownedBadge: [PointItem]!
  status: String!
}

type Cart {
  game: Game!
  gameID: ID!
  id: ID!
  user: User!
  userID: ID!
}

type CommunityAsset {
  asset: String!
  comments(page: Int!): [CommunityAssetComment]!
  dislike: Int!
  id: ID!
  like: Int!
  user: User!
}

type CommunityAssetComment {
  comment: String!
  id: ID!
  user: User!
}

type Country {
  country: String!
  id: ID!
  latitude: Float!
  longitude: Float!
}

type Discussion {
  comments(page: Int!): [DiscussionComment]!
  description: String!
  game: Game!
  id: ID!
  title: String!
  user: User!
}

type DiscussionComment {
  comment: String!
  id: ID!
  user: User!
}

type FriendRequest {
  friend: User!
  friendID: ID!
  status: String!
  user: User!
  userID: ID!
}

type Friends {
  friend: User!
  friendID: ID!
  user: User!
  userID: ID!
}

type Game {
  createdAt: Time!
  gameAdult: Boolean!
  gameBanner: Int!
  gameCountry: [MapData!]!
  gameDescription: String!
  gameDeveloper: String!
  gamePrice: Int!
  gamePublisher: String!
  gameSlideshow: [GameMedia!]!
  gameSystemRequirement: String!
  gameTag: String!
  gameTitle: String!
  id: ID!
  mostHouredPlayed: Int!
  promo: Promo
  review(page: Int!): [Review]!
}

type GameItem {
  game: Game!
  gameID: ID!
  gameItemDesc: String!
  gameItemImg: String!
  gameItemName: String!
  id: ID!
  transaction: [MarketTransaction]!
}

type GameMedia {
  contentType: String!
  id: ID!
}

type GameTransaction {
  game: Game!
  gameID: ID!
  id: ID!
  user: User!
  userID: ID!
}

type Inventory {
  gameItem: GameItem!
  gameItemID: ID!
  id: ID!
  userID: ID!
}

type MapData {
  count: Int!
  country: Country!
}

type MarketGameItem {
  gameItem: GameItem!
  gameItemID: ID!
  price: Int!
  type: String!
  user: User!
  userID: ID!
}

type MarketListing {
  gameItem: GameItem!
  gameItemID: ID!
  price: Int!
  type: String!
  user: User!
  userID: ID!
}

type MarketTransaction {
  createdAt: Time!
  gameItemID: ID!
  price: Int!
}

type Mutation {
  acceptFriendRequest(friendID: ID!, userID: ID!): FriendRequest!
  addReported(input: ID!): User!
  addWalletAmount(amount: Int!, userID: ID!): User!
  checkoutCart(useWallet: Boolean!, userID: ID!): Boolean!
  createGame(input: newGame!): Game!
  createReportRequest(input: InputRequestReport!): ReportRequest!
  createSuspensionList(input: InputSuspensionList!): String!
  createUnsuspensionRequest(input: InputUnsuspensionRequest!): UnsuspensionRequest!
  deleteGame(id: ID!): Game!
  deletePromo(id: ID!): Promo!
  deleteWishlist(gameID: ID!, userID: ID!): Wishlist!
  dislikeCommunityAsset(id: ID!): CommunityAsset!
  giftTo(friendID: ID!, userID: ID!): Boolean!
  helpfulReview(id: ID!): Review!
  ignoreFriendRequest(friendID: ID!, userID: ID!): FriendRequest!
  insertBuyItem(buyerID: ID!, gameItemID: ID!, userID: ID!): String!
  insertCart(gameID: ID!, userID: ID!): Cart!
  insertCommunityAsset(input: newCommunityAsset!): CommunityAsset!
  insertCommunityComment(input: newCommunityComment): CommunityAssetComment!
  insertCommunityVidImg(imgVid: String!, userID: ID!): CommunityAsset!
  insertDiscussion(input: newDiscussion): Discussion!
  insertDiscussionComment(input: newDiscussionComment): DiscussionComment!
  insertFriendRequest(friendID: ID!, userID: ID!): FriendRequest!
  insertFriendRequestByCode(code: String!, userID: ID!): FriendRequest!
  insertMarketItem(input: newMarketItem!): MarketGameItem!
  insertNewReview(desc: String!, gameID: ID!, recommend: Boolean!, userID: ID!): Review!
  insertPointTransaction(itemID: ID!, userID: ID!): Boolean!
  insertPointsItem(input: newPointItem!): PointItem!
  insertProfileComment(comment: String!, profileID: ID!, userID: ID!): ProfileComment!
  insertPromo(input: newPromo!): Promo!
  insertRedeemCode(amountMoney: Int!, code: String!): RedeemCode!
  insertReview(input: newReview): Review!
  insertReviewComment(input: newReviewComment): ReviewComment!
  insertSellItem(gameItemID: ID!, sellerID: ID!, userID: ID!): String!
  insertUserChat(message: String!, userID: ID!): String!
  insertWishlist(gameID: ID!, userID: ID!): Wishlist!
  likeCommunityAsset(id: ID!): CommunityAsset!
  notHelpfulReview(id: ID!): Review!
  redeemWalletCode(code: String!, userID: ID!): User!
  reduceWalletAmount(amount: Int!, userID: ID!): User!
  register(input: Register!): User!
  rejectFriendRequest(friendID: ID!, userID: ID!): FriendRequest!
  removeCart(gameID: ID!, userID: ID!): Boolean!
  sendOTP(input: Int!): Int
  updateAvatar(id: ID!, profilePic: String!): User!
  updateBackground(backgroundID: ID!, id: ID!): User!
  updateBadge(badgeID: ID!, id: ID!): User!
  updateFrame(frameID: ID!, id: ID!): User!
  updateGame(input: updateGame!): Game!
  updateMiniBackground(id: ID!, miniBgID: ID!): User!
  updatePromo(input: newPromo!): Promo!
  updateTheme(id: ID!, theme: String!): User!
  updateUser(input: updateUser): User!
}

type PointItem {
  id: ID!
  itemImg: String!
  itemPoints: Int!
  itemType: String!
}

type ProfileComment {
  comment: String!
  id: ID!
  profile: User!
  profileID: ID!
  user: User!
  userID: ID!
}

type Promo {
  discountPromo: Int!
  endDate: Time!
  id: ID!
}

type Query {
  deleteReport(id: ID!): String!
  gameByID(id: ID!): Game!
  getAllActivities(page: Int!): [Activities]!
  getAllGame: [Game]!
  getAllUser(page: Int!): [User]!
  getCard: [Card]!
  getCardByID(id: ID!): [Card]!
  getCommunityAsset: [CommunityAsset]!
  getCommunityAssetByID(id: ID!): CommunityAsset!
  getCommunityReview: [Review]!
  getDiscovery: [Game]!
  getDiscussion: [Discussion]!
  getDiscussionByID(id: ID!): Discussion!
  getGame: [Game]!
  getGameItem(page: Int!): [GameItem]!
  getGameItemByID(id: ID!): GameItem!
  getGamePaginate(page: Int!): [Game]!
  getMarketGameItemByID(id: ID!): [MarketGameItem]!
  getMarketListing: [MarketListing]!
  getNewRelease: [Game]!
  getPointsItem: [PointItem]!
  getPromo(gameID: ID!): Promo!
  getRedeemCode(code: String!): RedeemCode!
  getReportRequest: [ReportRequest!]!
  getReviewByID(id: ID!): Review!
  getSuspensionList: [SuspensionList!]!
  getUnsuspensionRequest: [UnsuspensionRequest!]!
  getUser(jwtToken: String!): User!
  getUserByCustomURL(customURL: String!): User!
  getWishlistByUser(userID: ID!): [Wishlist]!
  hello: String!
  login(accountName: String!, password: String!): String!
}

type RedeemCode {
  code: String!
  moneyAmount: Int!
}

type ReportRequest {
  id: ID!
  reason: String!
  reporter: User!
  reporter_id: ID!
  suspected: User!
  suspected_id: ID!
}

type Review {
  comments(page: Int!): [ReviewComment]!
  description: String!
  downvote: Int!
  game: Game!
  helpful: Int!
  id: ID!
  notHelpful: Int!
  recommended: Boolean!
  upvote: Int!
  user: User!
}

type ReviewComment {
  comment: String!
  id: ID!
  user: User!
}

type Subscription {
  messageAdded(itemID: Int!): String!
  privateChatAdded(userID: ID!): String!
}

type SuspensionList {
  reason: String!
  suspended: Boolean!
  user: User!
  user_id: ID!
}

type UnsuspensionRequest {
  reason: String!
  user: User!
  user_id: ID!
}

type User {
  accountName: String!
  background: PointItem
  backgroundID: Int
  badge: PointItem
  badgeID: Int
  cart: [Cart!]!
  country: String!
  countryID: ID!
  customURL: String!
  displayName: String!
  frame: PointItem
  frameID: Int
  friendCode: String!
  friendRequest: [FriendRequest]!
  friends: [Friends]!
  id: ID!
  items(page: Int!): [Inventory!]!
  level: Int!
  miniBackground: PointItem
  miniBackgroundID: Int!
  ownedBackground: [PointItem]!
  ownedBadge: [PointItem]!
  ownedFrame: [PointItem]!
  ownedMiniBackground: [PointItem]!
  points: Int!
  profileComment(page: Int!): [ProfileComment]!
  profilePic: String!
  realName: String!
  reported: Int!
  status: String!
  summary: String!
  suspended: Boolean
  theme: String!
  wallet: Int!
  wishlist: Wishlist!
}

type Wishlist {
  game: Game!
  gameID: ID!
  id: ID!
  user: User!
  userID: ID!
}

input InputRequestReport {
  reason: String!
  reporter_id: ID!
  suspected_id: ID!
}

input InputSuspensionList {
  reason: String!
  suspended: Boolean!
  user_id: ID!
}

input InputUnsuspensionRequest {
  reason: String!
  user_email: String!
}

input Register {
  accountName: String!
  password: String!
}

input newCommunityAsset {
  id: ID!
  itemImg: String!
  itemPoints: Int!
}

input newCommunityComment {
  comment: String!
  id: ID!
  userID: ID!
}

input newDiscussion {
  description: String!
  gameID: ID!
  id: ID!
  title: String!
  userID: ID!
}

input newDiscussionComment {
  comment: String!
  id: ID!
  userID: ID!
}

input newGame {
  gameAdult: Boolean!
  gameBanner: Upload!
  gameDescription: String!
  gameDeveloper: String!
  gamePrice: Int!
  gamePublisher: String!
  gameSlideshow: [Upload!]!
  gameSystemRequirement: String!
  gameTag: String!
  gameTitle: String!
}

input newMarketItem {
  gameItemID: ID!
  price: Int!
  type: String!
  userID: ID!
}

input newPointItem {
  id: ID!
  itemImg: String!
  itemPoints: Int!
  itemType: String!
}

input newPromo {
  discountPromo: Int!
  endDate: Time!
  gameID: ID!
}

input newReview {
  description: String!
  gameID: ID!
  id: ID!
  recommended: Boolean!
  userID: ID!
}

input newReviewComment {
  comment: String!
  id: ID!
  userID: ID!
}

input updateGame {
  gameAdult: Boolean!
  gameBanner: Upload
  gameDescription: String!
  gameDeveloper: String!
  gamePrice: Int!
  gamePublisher: String!
  gameSlideshow: [Upload]
  gameSystemRequirement: String!
  gameTag: String!
  gameTitle: String!
  id: ID!
}

input updateUser {
  country: String!
  customURL: String!
  displayName: String!
  id: ID!
  realName: String!
  summary: String!
}


scalar Upload

scalar Time
